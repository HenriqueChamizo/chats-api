import Anotation, { IAnotation } from "../models/Anotation";

class AnotationService {
  /**
   * Cria uma nova anota√ß√£o no banco.
   * @param description Resumo da anota√ß√£o
   * @param data Dados estruturados da anota√ß√£o
   * @param keys Lista de chaves para facilitar a busca
   * @returns Anota√ß√£o criada
   */
  async createAnotation(
    description: string,
    data: Record<string, any>,
    keys: string[]
  ): Promise<IAnotation> {
    return await Anotation.create({ description, data, keys });
  }

  /**
   * Busca anota√ß√µes pelo ID
   * @param id ID da anota√ß√£o
   * @returns Anota√ß√£o encontrada ou null
   */
  async getAnotationById(id: string): Promise<IAnotation | null> {
    return await Anotation.findById(id);
  }

  /**
   * Atualiza uma anota√ß√£o
   * @param id ID da anota√ß√£o
   * @param updateData Novos dados para atualiza√ß√£o
   * @returns Anota√ß√£o atualizada
   */
  async updateAnotation(
    id: string,
    updateData: Partial<IAnotation>
  ): Promise<IAnotation | null> {
    return await Anotation.findByIdAndUpdate(id, updateData, { new: true });
  }

  /**
   * Remove uma anota√ß√£o do banco
   * @param id ID da anota√ß√£o
   * @returns Resultado da exclus√£o
   */
  async deleteAnotation(id: string): Promise<boolean> {
    const result = await Anotation.findByIdAndDelete(id);
    return !!result;
  }

  /**
   * üî• Consulta por `keys` e calcula a porcentagem de correspond√™ncia.
   * @param keys Lista de palavras-chave buscadas
   * @returns Lista de anota√ß√µes e % de match com as chaves informadas
   */
  async searchAnotationsByKeys(
    keys: string[]
  ): Promise<{ anotation: IAnotation; matchPercentage: number }[]> {
    const anotations = await Anotation.find({ keys: { $in: keys } });

    return anotations.map((anotation) => {
      const matchedKeys = anotation.keys.filter((key) => keys.includes(key));
      const matchPercentage = (matchedKeys.length / keys.length) * 100;

      return { anotation, matchPercentage };
    });
  }
}

export default new AnotationService();
